from dataclasses import dataclass

from rules import GameApi, GameRule


class FramedGameApi(GameApi):
    def __init__(self, *, rule: GameRule):
        self.rule = rule
    
    def score(self, message_text: str) -> int:
        """
        ðŸŽ¥ ðŸŸ© â¬› â¬› â¬› â¬› â¬› # 6 points
        ðŸŽ¥ ðŸŸ¥ ðŸŸ© â¬› â¬› â¬› â¬› # 5 points
        ðŸŽ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ© â¬› â¬› â¬› # 4 points
        ðŸŽ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ© â¬› â¬› # 3 points
        ðŸŽ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ© â¬› # 2 points
        ðŸŽ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ© # 1 points
        ðŸŽ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ ðŸŸ¥ # 0 points
        """
        if message_text.count("ðŸŽ¥") != 1:
            raise Exception("Message must contain exactly one ðŸŽ¥")

        score = self.rule.max_score
        for char in message_text:
            if char in self.rule.acceptable_chars:
                if char == "ðŸŸ¥" or char == "â¬›":
                    score -= 1
                elif char == "ðŸŸ©":
                    break

        if score > self.rule.max_score:
            raise Exception(f"Score exceeds limit: {score}")
        return score

